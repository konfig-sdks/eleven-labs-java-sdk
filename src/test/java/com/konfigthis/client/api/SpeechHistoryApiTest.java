/*
 * ElevenLabs API Documentation
 * This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://elevenlabs.io. Our API is experimental so all endpoints are subject to change.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.BodyDownloadHistoryItemsV1HistoryDownloadPost;
import com.konfigthis.client.model.GetSpeechHistoryResponseModel;
import com.konfigthis.client.model.SpeechHistoryItemResponseModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SpeechHistoryApi
 */
@Disabled
public class SpeechHistoryApiTest {

    private static SpeechHistoryApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new SpeechHistoryApi(apiClient);
    }

    /**
     * Delete History Item
     *
     * Delete a history item by its ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteHistoryItemByIdTest() throws ApiException {
        String historyItemId = null;
        String xiApiKey = null;
        Object response = api.deleteHistoryItemById(historyItemId)
                .xiApiKey(xiApiKey)
                .execute();
        // TODO: test validations
    }

    /**
     * Download History Items
     *
     * Download one or more history items. If one history item ID is provided, we will return a single audio file. If more than one history item IDs are provided, we will provide the history items packed into a .zip file.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void downloadHistoryItemsTest() throws ApiException {
        List<String> historyItemIds = null;
        String xiApiKey = null;
        api.downloadHistoryItems(historyItemIds)
                .xiApiKey(xiApiKey)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Generated Items
     *
     * Returns metadata about all your generated audio.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGeneratedAudioMetadataTest() throws ApiException {
        Integer pageSize = null;
        String startAfterHistoryItemId = null;
        String voiceId = null;
        String xiApiKey = null;
        GetSpeechHistoryResponseModel response = api.getGeneratedAudioMetadata()
                .pageSize(pageSize)
                .startAfterHistoryItemId(startAfterHistoryItemId)
                .voiceId(voiceId)
                .xiApiKey(xiApiKey)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Audio From History Item
     *
     * Returns the audio of an history item.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getHistoryItemAudioTest() throws ApiException {
        String historyItemId = null;
        String xiApiKey = null;
        api.getHistoryItemAudio(historyItemId)
                .xiApiKey(xiApiKey)
                .execute();
        // TODO: test validations
    }

    /**
     * Get History Item By Id
     *
     * Returns information about an history item by its ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getHistoryItemByIdTest() throws ApiException {
        String historyItemId = null;
        String xiApiKey = null;
        SpeechHistoryItemResponseModel response = api.getHistoryItemById(historyItemId)
                .xiApiKey(xiApiKey)
                .execute();
        // TODO: test validations
    }

}
