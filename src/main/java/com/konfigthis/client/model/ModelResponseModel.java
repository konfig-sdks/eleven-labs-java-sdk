/*
 * ElevenLabs API Documentation
 * This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://elevenlabs.io. Our API is experimental so all endpoints are subject to change.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.LanguageResponseModel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * ModelResponseModel
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class ModelResponseModel {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_MODEL_ID = "model_id";
  @SerializedName(SERIALIZED_NAME_MODEL_ID)
  private String modelId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_CAN_BE_FINETUNED = "can_be_finetuned";
  @SerializedName(SERIALIZED_NAME_CAN_BE_FINETUNED)
  private Boolean canBeFinetuned;

  public static final String SERIALIZED_NAME_CAN_DO_TEXT_TO_SPEECH = "can_do_text_to_speech";
  @SerializedName(SERIALIZED_NAME_CAN_DO_TEXT_TO_SPEECH)
  private Boolean canDoTextToSpeech;

  public static final String SERIALIZED_NAME_CAN_DO_VOICE_CONVERSION = "can_do_voice_conversion";
  @SerializedName(SERIALIZED_NAME_CAN_DO_VOICE_CONVERSION)
  private Boolean canDoVoiceConversion;

  public static final String SERIALIZED_NAME_CAN_USE_STYLE = "can_use_style";
  @SerializedName(SERIALIZED_NAME_CAN_USE_STYLE)
  private Boolean canUseStyle;

  public static final String SERIALIZED_NAME_CAN_USE_SPEAKER_BOOST = "can_use_speaker_boost";
  @SerializedName(SERIALIZED_NAME_CAN_USE_SPEAKER_BOOST)
  private Boolean canUseSpeakerBoost;

  public static final String SERIALIZED_NAME_SERVES_PRO_VOICES = "serves_pro_voices";
  @SerializedName(SERIALIZED_NAME_SERVES_PRO_VOICES)
  private Boolean servesProVoices;

  public static final String SERIALIZED_NAME_TOKEN_COST_FACTOR = "token_cost_factor";
  @SerializedName(SERIALIZED_NAME_TOKEN_COST_FACTOR)
  private Double tokenCostFactor;

  public static final String SERIALIZED_NAME_REQUIRES_ALPHA_ACCESS = "requires_alpha_access";
  @SerializedName(SERIALIZED_NAME_REQUIRES_ALPHA_ACCESS)
  private Boolean requiresAlphaAccess;

  public static final String SERIALIZED_NAME_MAX_CHARACTERS_REQUEST_FREE_USER = "max_characters_request_free_user";
  @SerializedName(SERIALIZED_NAME_MAX_CHARACTERS_REQUEST_FREE_USER)
  private Integer maxCharactersRequestFreeUser;

  public static final String SERIALIZED_NAME_MAX_CHARACTERS_REQUEST_SUBSCRIBED_USER = "max_characters_request_subscribed_user";
  @SerializedName(SERIALIZED_NAME_MAX_CHARACTERS_REQUEST_SUBSCRIBED_USER)
  private Integer maxCharactersRequestSubscribedUser;

  public static final String SERIALIZED_NAME_LANGUAGES = "languages";
  @SerializedName(SERIALIZED_NAME_LANGUAGES)
  private List<LanguageResponseModel> languages = new ArrayList<>();

  public ModelResponseModel() {
  }

  public ModelResponseModel description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public ModelResponseModel modelId(String modelId) {
    
    
    
    
    this.modelId = modelId;
    return this;
  }

   /**
   * Get modelId
   * @return modelId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getModelId() {
    return modelId;
  }


  public void setModelId(String modelId) {
    
    
    
    this.modelId = modelId;
  }


  public ModelResponseModel name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public ModelResponseModel canBeFinetuned(Boolean canBeFinetuned) {
    
    
    
    
    this.canBeFinetuned = canBeFinetuned;
    return this;
  }

   /**
   * Get canBeFinetuned
   * @return canBeFinetuned
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCanBeFinetuned() {
    return canBeFinetuned;
  }


  public void setCanBeFinetuned(Boolean canBeFinetuned) {
    
    
    
    this.canBeFinetuned = canBeFinetuned;
  }


  public ModelResponseModel canDoTextToSpeech(Boolean canDoTextToSpeech) {
    
    
    
    
    this.canDoTextToSpeech = canDoTextToSpeech;
    return this;
  }

   /**
   * Get canDoTextToSpeech
   * @return canDoTextToSpeech
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCanDoTextToSpeech() {
    return canDoTextToSpeech;
  }


  public void setCanDoTextToSpeech(Boolean canDoTextToSpeech) {
    
    
    
    this.canDoTextToSpeech = canDoTextToSpeech;
  }


  public ModelResponseModel canDoVoiceConversion(Boolean canDoVoiceConversion) {
    
    
    
    
    this.canDoVoiceConversion = canDoVoiceConversion;
    return this;
  }

   /**
   * Get canDoVoiceConversion
   * @return canDoVoiceConversion
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCanDoVoiceConversion() {
    return canDoVoiceConversion;
  }


  public void setCanDoVoiceConversion(Boolean canDoVoiceConversion) {
    
    
    
    this.canDoVoiceConversion = canDoVoiceConversion;
  }


  public ModelResponseModel canUseStyle(Boolean canUseStyle) {
    
    
    
    
    this.canUseStyle = canUseStyle;
    return this;
  }

   /**
   * Get canUseStyle
   * @return canUseStyle
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCanUseStyle() {
    return canUseStyle;
  }


  public void setCanUseStyle(Boolean canUseStyle) {
    
    
    
    this.canUseStyle = canUseStyle;
  }


  public ModelResponseModel canUseSpeakerBoost(Boolean canUseSpeakerBoost) {
    
    
    
    
    this.canUseSpeakerBoost = canUseSpeakerBoost;
    return this;
  }

   /**
   * Get canUseSpeakerBoost
   * @return canUseSpeakerBoost
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCanUseSpeakerBoost() {
    return canUseSpeakerBoost;
  }


  public void setCanUseSpeakerBoost(Boolean canUseSpeakerBoost) {
    
    
    
    this.canUseSpeakerBoost = canUseSpeakerBoost;
  }


  public ModelResponseModel servesProVoices(Boolean servesProVoices) {
    
    
    
    
    this.servesProVoices = servesProVoices;
    return this;
  }

   /**
   * Get servesProVoices
   * @return servesProVoices
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getServesProVoices() {
    return servesProVoices;
  }


  public void setServesProVoices(Boolean servesProVoices) {
    
    
    
    this.servesProVoices = servesProVoices;
  }


  public ModelResponseModel tokenCostFactor(Double tokenCostFactor) {
    
    
    
    
    this.tokenCostFactor = tokenCostFactor;
    return this;
  }

  public ModelResponseModel tokenCostFactor(Integer tokenCostFactor) {
    
    
    
    
    this.tokenCostFactor = tokenCostFactor.doubleValue();
    return this;
  }

   /**
   * Get tokenCostFactor
   * @return tokenCostFactor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Double getTokenCostFactor() {
    return tokenCostFactor;
  }


  public void setTokenCostFactor(Double tokenCostFactor) {
    
    
    
    this.tokenCostFactor = tokenCostFactor;
  }


  public ModelResponseModel requiresAlphaAccess(Boolean requiresAlphaAccess) {
    
    
    
    
    this.requiresAlphaAccess = requiresAlphaAccess;
    return this;
  }

   /**
   * Get requiresAlphaAccess
   * @return requiresAlphaAccess
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getRequiresAlphaAccess() {
    return requiresAlphaAccess;
  }


  public void setRequiresAlphaAccess(Boolean requiresAlphaAccess) {
    
    
    
    this.requiresAlphaAccess = requiresAlphaAccess;
  }


  public ModelResponseModel maxCharactersRequestFreeUser(Integer maxCharactersRequestFreeUser) {
    
    
    
    
    this.maxCharactersRequestFreeUser = maxCharactersRequestFreeUser;
    return this;
  }

   /**
   * Get maxCharactersRequestFreeUser
   * @return maxCharactersRequestFreeUser
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getMaxCharactersRequestFreeUser() {
    return maxCharactersRequestFreeUser;
  }


  public void setMaxCharactersRequestFreeUser(Integer maxCharactersRequestFreeUser) {
    
    
    
    this.maxCharactersRequestFreeUser = maxCharactersRequestFreeUser;
  }


  public ModelResponseModel maxCharactersRequestSubscribedUser(Integer maxCharactersRequestSubscribedUser) {
    
    
    
    
    this.maxCharactersRequestSubscribedUser = maxCharactersRequestSubscribedUser;
    return this;
  }

   /**
   * Get maxCharactersRequestSubscribedUser
   * @return maxCharactersRequestSubscribedUser
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getMaxCharactersRequestSubscribedUser() {
    return maxCharactersRequestSubscribedUser;
  }


  public void setMaxCharactersRequestSubscribedUser(Integer maxCharactersRequestSubscribedUser) {
    
    
    
    this.maxCharactersRequestSubscribedUser = maxCharactersRequestSubscribedUser;
  }


  public ModelResponseModel languages(List<LanguageResponseModel> languages) {
    
    
    
    
    this.languages = languages;
    return this;
  }

  public ModelResponseModel addLanguagesItem(LanguageResponseModel languagesItem) {
    this.languages.add(languagesItem);
    return this;
  }

   /**
   * Get languages
   * @return languages
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<LanguageResponseModel> getLanguages() {
    return languages;
  }


  public void setLanguages(List<LanguageResponseModel> languages) {
    
    
    
    this.languages = languages;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ModelResponseModel instance itself
   */
  public ModelResponseModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelResponseModel modelResponseModel = (ModelResponseModel) o;
    return Objects.equals(this.description, modelResponseModel.description) &&
        Objects.equals(this.modelId, modelResponseModel.modelId) &&
        Objects.equals(this.name, modelResponseModel.name) &&
        Objects.equals(this.canBeFinetuned, modelResponseModel.canBeFinetuned) &&
        Objects.equals(this.canDoTextToSpeech, modelResponseModel.canDoTextToSpeech) &&
        Objects.equals(this.canDoVoiceConversion, modelResponseModel.canDoVoiceConversion) &&
        Objects.equals(this.canUseStyle, modelResponseModel.canUseStyle) &&
        Objects.equals(this.canUseSpeakerBoost, modelResponseModel.canUseSpeakerBoost) &&
        Objects.equals(this.servesProVoices, modelResponseModel.servesProVoices) &&
        Objects.equals(this.tokenCostFactor, modelResponseModel.tokenCostFactor) &&
        Objects.equals(this.requiresAlphaAccess, modelResponseModel.requiresAlphaAccess) &&
        Objects.equals(this.maxCharactersRequestFreeUser, modelResponseModel.maxCharactersRequestFreeUser) &&
        Objects.equals(this.maxCharactersRequestSubscribedUser, modelResponseModel.maxCharactersRequestSubscribedUser) &&
        Objects.equals(this.languages, modelResponseModel.languages)&&
        Objects.equals(this.additionalProperties, modelResponseModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, modelId, name, canBeFinetuned, canDoTextToSpeech, canDoVoiceConversion, canUseStyle, canUseSpeakerBoost, servesProVoices, tokenCostFactor, requiresAlphaAccess, maxCharactersRequestFreeUser, maxCharactersRequestSubscribedUser, languages, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelResponseModel {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    modelId: ").append(toIndentedString(modelId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    canBeFinetuned: ").append(toIndentedString(canBeFinetuned)).append("\n");
    sb.append("    canDoTextToSpeech: ").append(toIndentedString(canDoTextToSpeech)).append("\n");
    sb.append("    canDoVoiceConversion: ").append(toIndentedString(canDoVoiceConversion)).append("\n");
    sb.append("    canUseStyle: ").append(toIndentedString(canUseStyle)).append("\n");
    sb.append("    canUseSpeakerBoost: ").append(toIndentedString(canUseSpeakerBoost)).append("\n");
    sb.append("    servesProVoices: ").append(toIndentedString(servesProVoices)).append("\n");
    sb.append("    tokenCostFactor: ").append(toIndentedString(tokenCostFactor)).append("\n");
    sb.append("    requiresAlphaAccess: ").append(toIndentedString(requiresAlphaAccess)).append("\n");
    sb.append("    maxCharactersRequestFreeUser: ").append(toIndentedString(maxCharactersRequestFreeUser)).append("\n");
    sb.append("    maxCharactersRequestSubscribedUser: ").append(toIndentedString(maxCharactersRequestSubscribedUser)).append("\n");
    sb.append("    languages: ").append(toIndentedString(languages)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("model_id");
    openapiFields.add("name");
    openapiFields.add("can_be_finetuned");
    openapiFields.add("can_do_text_to_speech");
    openapiFields.add("can_do_voice_conversion");
    openapiFields.add("can_use_style");
    openapiFields.add("can_use_speaker_boost");
    openapiFields.add("serves_pro_voices");
    openapiFields.add("token_cost_factor");
    openapiFields.add("requires_alpha_access");
    openapiFields.add("max_characters_request_free_user");
    openapiFields.add("max_characters_request_subscribed_user");
    openapiFields.add("languages");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("description");
    openapiRequiredFields.add("model_id");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("can_be_finetuned");
    openapiRequiredFields.add("can_do_text_to_speech");
    openapiRequiredFields.add("can_do_voice_conversion");
    openapiRequiredFields.add("can_use_style");
    openapiRequiredFields.add("can_use_speaker_boost");
    openapiRequiredFields.add("serves_pro_voices");
    openapiRequiredFields.add("token_cost_factor");
    openapiRequiredFields.add("requires_alpha_access");
    openapiRequiredFields.add("max_characters_request_free_user");
    openapiRequiredFields.add("max_characters_request_subscribed_user");
    openapiRequiredFields.add("languages");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ModelResponseModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ModelResponseModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModelResponseModel is not found in the empty JSON string", ModelResponseModel.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ModelResponseModel.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if (!jsonObj.get("model_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `model_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("model_id").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("languages").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `languages` to be an array in the JSON string but got `%s`", jsonObj.get("languages").toString()));
      }

      JsonArray jsonArraylanguages = jsonObj.getAsJsonArray("languages");
      // validate the required field `languages` (array)
      for (int i = 0; i < jsonArraylanguages.size(); i++) {
        LanguageResponseModel.validateJsonObject(jsonArraylanguages.get(i).getAsJsonObject());
      };
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModelResponseModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModelResponseModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModelResponseModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModelResponseModel.class));

       return (TypeAdapter<T>) new TypeAdapter<ModelResponseModel>() {
           @Override
           public void write(JsonWriter out, ModelResponseModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ModelResponseModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ModelResponseModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModelResponseModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModelResponseModel
  * @throws IOException if the JSON string is invalid with respect to ModelResponseModel
  */
  public static ModelResponseModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModelResponseModel.class);
  }

 /**
  * Convert an instance of ModelResponseModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

