/*
 * ElevenLabs API Documentation
 * This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://elevenlabs.io. Our API is experimental so all endpoints are subject to change.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.FeedbackResponseModel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * SpeechHistoryItemResponseModel
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class SpeechHistoryItemResponseModel {
  public static final String SERIALIZED_NAME_HISTORY_ITEM_ID = "history_item_id";
  @SerializedName(SERIALIZED_NAME_HISTORY_ITEM_ID)
  private String historyItemId;

  public static final String SERIALIZED_NAME_REQUEST_ID = "request_id";
  @SerializedName(SERIALIZED_NAME_REQUEST_ID)
  private String requestId;

  public static final String SERIALIZED_NAME_VOICE_ID = "voice_id";
  @SerializedName(SERIALIZED_NAME_VOICE_ID)
  private String voiceId;

  public static final String SERIALIZED_NAME_MODEL_ID = "model_id";
  @SerializedName(SERIALIZED_NAME_MODEL_ID)
  private String modelId;

  public static final String SERIALIZED_NAME_VOICE_NAME = "voice_name";
  @SerializedName(SERIALIZED_NAME_VOICE_NAME)
  private String voiceName;

  /**
   * Gets or Sets voiceCategory
   */
  @JsonAdapter(VoiceCategoryEnum.Adapter.class)
 public enum VoiceCategoryEnum {
    PREMADE("premade"),
    
    CLONED("cloned"),
    
    GENERATED("generated"),
    
    PROFESSIONAL("professional");

    private String value;

    VoiceCategoryEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static VoiceCategoryEnum fromValue(String value) {
      for (VoiceCategoryEnum b : VoiceCategoryEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<VoiceCategoryEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VoiceCategoryEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public VoiceCategoryEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return VoiceCategoryEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_VOICE_CATEGORY = "voice_category";
  @SerializedName(SERIALIZED_NAME_VOICE_CATEGORY)
  private VoiceCategoryEnum voiceCategory;

  public static final String SERIALIZED_NAME_TEXT = "text";
  @SerializedName(SERIALIZED_NAME_TEXT)
  private String text;

  public static final String SERIALIZED_NAME_DATE_UNIX = "date_unix";
  @SerializedName(SERIALIZED_NAME_DATE_UNIX)
  private Integer dateUnix;

  public static final String SERIALIZED_NAME_CHARACTER_COUNT_CHANGE_FROM = "character_count_change_from";
  @SerializedName(SERIALIZED_NAME_CHARACTER_COUNT_CHANGE_FROM)
  private Integer characterCountChangeFrom;

  public static final String SERIALIZED_NAME_CHARACTER_COUNT_CHANGE_TO = "character_count_change_to";
  @SerializedName(SERIALIZED_NAME_CHARACTER_COUNT_CHANGE_TO)
  private Integer characterCountChangeTo;

  public static final String SERIALIZED_NAME_CONTENT_TYPE = "content_type";
  @SerializedName(SERIALIZED_NAME_CONTENT_TYPE)
  private String contentType;

  /**
   * Gets or Sets state
   */
  @JsonAdapter(StateEnum.Adapter.class)
 public enum StateEnum {
    CREATED("created"),
    
    DELETED("deleted"),
    
    PROCESSING("processing");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public static final String SERIALIZED_NAME_SETTINGS = "settings";
  @SerializedName(SERIALIZED_NAME_SETTINGS)
  private Object settings;

  public static final String SERIALIZED_NAME_FEEDBACK = "feedback";
  @SerializedName(SERIALIZED_NAME_FEEDBACK)
  private FeedbackResponseModel feedback;

  public static final String SERIALIZED_NAME_SHARE_LINK_ID = "share_link_id";
  @SerializedName(SERIALIZED_NAME_SHARE_LINK_ID)
  private String shareLinkId;

  /**
   * Gets or Sets source
   */
  @JsonAdapter(SourceEnum.Adapter.class)
 public enum SourceEnum {
    TTS("TTS"),
    
    STS("STS");

    private String value;

    SourceEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SourceEnum fromValue(String value) {
      for (SourceEnum b : SourceEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SourceEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SourceEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SourceEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SourceEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SOURCE = "source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private SourceEnum source;

  public SpeechHistoryItemResponseModel() {
  }

  public SpeechHistoryItemResponseModel historyItemId(String historyItemId) {
    
    
    
    
    this.historyItemId = historyItemId;
    return this;
  }

   /**
   * Get historyItemId
   * @return historyItemId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getHistoryItemId() {
    return historyItemId;
  }


  public void setHistoryItemId(String historyItemId) {
    
    
    
    this.historyItemId = historyItemId;
  }


  public SpeechHistoryItemResponseModel requestId(String requestId) {
    
    
    
    
    this.requestId = requestId;
    return this;
  }

   /**
   * Get requestId
   * @return requestId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getRequestId() {
    return requestId;
  }


  public void setRequestId(String requestId) {
    
    
    
    this.requestId = requestId;
  }


  public SpeechHistoryItemResponseModel voiceId(String voiceId) {
    
    
    
    
    this.voiceId = voiceId;
    return this;
  }

   /**
   * Get voiceId
   * @return voiceId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getVoiceId() {
    return voiceId;
  }


  public void setVoiceId(String voiceId) {
    
    
    
    this.voiceId = voiceId;
  }


  public SpeechHistoryItemResponseModel modelId(String modelId) {
    
    
    
    
    this.modelId = modelId;
    return this;
  }

   /**
   * Get modelId
   * @return modelId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getModelId() {
    return modelId;
  }


  public void setModelId(String modelId) {
    
    
    
    this.modelId = modelId;
  }


  public SpeechHistoryItemResponseModel voiceName(String voiceName) {
    
    
    
    
    this.voiceName = voiceName;
    return this;
  }

   /**
   * Get voiceName
   * @return voiceName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getVoiceName() {
    return voiceName;
  }


  public void setVoiceName(String voiceName) {
    
    
    
    this.voiceName = voiceName;
  }


  public SpeechHistoryItemResponseModel voiceCategory(VoiceCategoryEnum voiceCategory) {
    
    
    
    
    this.voiceCategory = voiceCategory;
    return this;
  }

   /**
   * Get voiceCategory
   * @return voiceCategory
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public VoiceCategoryEnum getVoiceCategory() {
    return voiceCategory;
  }


  public void setVoiceCategory(VoiceCategoryEnum voiceCategory) {
    
    
    
    this.voiceCategory = voiceCategory;
  }


  public SpeechHistoryItemResponseModel text(String text) {
    
    
    
    
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getText() {
    return text;
  }


  public void setText(String text) {
    
    
    
    this.text = text;
  }


  public SpeechHistoryItemResponseModel dateUnix(Integer dateUnix) {
    
    
    
    
    this.dateUnix = dateUnix;
    return this;
  }

   /**
   * Get dateUnix
   * @return dateUnix
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getDateUnix() {
    return dateUnix;
  }


  public void setDateUnix(Integer dateUnix) {
    
    
    
    this.dateUnix = dateUnix;
  }


  public SpeechHistoryItemResponseModel characterCountChangeFrom(Integer characterCountChangeFrom) {
    
    
    
    
    this.characterCountChangeFrom = characterCountChangeFrom;
    return this;
  }

   /**
   * Get characterCountChangeFrom
   * @return characterCountChangeFrom
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getCharacterCountChangeFrom() {
    return characterCountChangeFrom;
  }


  public void setCharacterCountChangeFrom(Integer characterCountChangeFrom) {
    
    
    
    this.characterCountChangeFrom = characterCountChangeFrom;
  }


  public SpeechHistoryItemResponseModel characterCountChangeTo(Integer characterCountChangeTo) {
    
    
    
    
    this.characterCountChangeTo = characterCountChangeTo;
    return this;
  }

   /**
   * Get characterCountChangeTo
   * @return characterCountChangeTo
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getCharacterCountChangeTo() {
    return characterCountChangeTo;
  }


  public void setCharacterCountChangeTo(Integer characterCountChangeTo) {
    
    
    
    this.characterCountChangeTo = characterCountChangeTo;
  }


  public SpeechHistoryItemResponseModel contentType(String contentType) {
    
    
    
    
    this.contentType = contentType;
    return this;
  }

   /**
   * Get contentType
   * @return contentType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getContentType() {
    return contentType;
  }


  public void setContentType(String contentType) {
    
    
    
    this.contentType = contentType;
  }


  public SpeechHistoryItemResponseModel state(StateEnum state) {
    
    
    
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public StateEnum getState() {
    return state;
  }


  public void setState(StateEnum state) {
    
    
    
    this.state = state;
  }


  public SpeechHistoryItemResponseModel settings(Object settings) {
    
    
    
    
    this.settings = settings;
    return this;
  }

   /**
   * Get settings
   * @return settings
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Object getSettings() {
    return settings;
  }


  public void setSettings(Object settings) {
    
    
    
    this.settings = settings;
  }


  public SpeechHistoryItemResponseModel feedback(FeedbackResponseModel feedback) {
    
    
    
    
    this.feedback = feedback;
    return this;
  }

   /**
   * Get feedback
   * @return feedback
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public FeedbackResponseModel getFeedback() {
    return feedback;
  }


  public void setFeedback(FeedbackResponseModel feedback) {
    
    
    
    this.feedback = feedback;
  }


  public SpeechHistoryItemResponseModel shareLinkId(String shareLinkId) {
    
    
    
    
    this.shareLinkId = shareLinkId;
    return this;
  }

   /**
   * Get shareLinkId
   * @return shareLinkId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getShareLinkId() {
    return shareLinkId;
  }


  public void setShareLinkId(String shareLinkId) {
    
    
    
    this.shareLinkId = shareLinkId;
  }


  public SpeechHistoryItemResponseModel source(SourceEnum source) {
    
    
    
    
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public SourceEnum getSource() {
    return source;
  }


  public void setSource(SourceEnum source) {
    
    
    
    this.source = source;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the SpeechHistoryItemResponseModel instance itself
   */
  public SpeechHistoryItemResponseModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SpeechHistoryItemResponseModel speechHistoryItemResponseModel = (SpeechHistoryItemResponseModel) o;
    return Objects.equals(this.historyItemId, speechHistoryItemResponseModel.historyItemId) &&
        Objects.equals(this.requestId, speechHistoryItemResponseModel.requestId) &&
        Objects.equals(this.voiceId, speechHistoryItemResponseModel.voiceId) &&
        Objects.equals(this.modelId, speechHistoryItemResponseModel.modelId) &&
        Objects.equals(this.voiceName, speechHistoryItemResponseModel.voiceName) &&
        Objects.equals(this.voiceCategory, speechHistoryItemResponseModel.voiceCategory) &&
        Objects.equals(this.text, speechHistoryItemResponseModel.text) &&
        Objects.equals(this.dateUnix, speechHistoryItemResponseModel.dateUnix) &&
        Objects.equals(this.characterCountChangeFrom, speechHistoryItemResponseModel.characterCountChangeFrom) &&
        Objects.equals(this.characterCountChangeTo, speechHistoryItemResponseModel.characterCountChangeTo) &&
        Objects.equals(this.contentType, speechHistoryItemResponseModel.contentType) &&
        Objects.equals(this.state, speechHistoryItemResponseModel.state) &&
        Objects.equals(this.settings, speechHistoryItemResponseModel.settings) &&
        Objects.equals(this.feedback, speechHistoryItemResponseModel.feedback) &&
        Objects.equals(this.shareLinkId, speechHistoryItemResponseModel.shareLinkId) &&
        Objects.equals(this.source, speechHistoryItemResponseModel.source)&&
        Objects.equals(this.additionalProperties, speechHistoryItemResponseModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(historyItemId, requestId, voiceId, modelId, voiceName, voiceCategory, text, dateUnix, characterCountChangeFrom, characterCountChangeTo, contentType, state, settings, feedback, shareLinkId, source, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SpeechHistoryItemResponseModel {\n");
    sb.append("    historyItemId: ").append(toIndentedString(historyItemId)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    voiceId: ").append(toIndentedString(voiceId)).append("\n");
    sb.append("    modelId: ").append(toIndentedString(modelId)).append("\n");
    sb.append("    voiceName: ").append(toIndentedString(voiceName)).append("\n");
    sb.append("    voiceCategory: ").append(toIndentedString(voiceCategory)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    dateUnix: ").append(toIndentedString(dateUnix)).append("\n");
    sb.append("    characterCountChangeFrom: ").append(toIndentedString(characterCountChangeFrom)).append("\n");
    sb.append("    characterCountChangeTo: ").append(toIndentedString(characterCountChangeTo)).append("\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("    feedback: ").append(toIndentedString(feedback)).append("\n");
    sb.append("    shareLinkId: ").append(toIndentedString(shareLinkId)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("history_item_id");
    openapiFields.add("request_id");
    openapiFields.add("voice_id");
    openapiFields.add("model_id");
    openapiFields.add("voice_name");
    openapiFields.add("voice_category");
    openapiFields.add("text");
    openapiFields.add("date_unix");
    openapiFields.add("character_count_change_from");
    openapiFields.add("character_count_change_to");
    openapiFields.add("content_type");
    openapiFields.add("state");
    openapiFields.add("settings");
    openapiFields.add("feedback");
    openapiFields.add("share_link_id");
    openapiFields.add("source");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("history_item_id");
    openapiRequiredFields.add("request_id");
    openapiRequiredFields.add("voice_id");
    openapiRequiredFields.add("model_id");
    openapiRequiredFields.add("voice_name");
    openapiRequiredFields.add("voice_category");
    openapiRequiredFields.add("text");
    openapiRequiredFields.add("date_unix");
    openapiRequiredFields.add("character_count_change_from");
    openapiRequiredFields.add("character_count_change_to");
    openapiRequiredFields.add("content_type");
    openapiRequiredFields.add("state");
    openapiRequiredFields.add("settings");
    openapiRequiredFields.add("feedback");
    openapiRequiredFields.add("share_link_id");
    openapiRequiredFields.add("source");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SpeechHistoryItemResponseModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!SpeechHistoryItemResponseModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SpeechHistoryItemResponseModel is not found in the empty JSON string", SpeechHistoryItemResponseModel.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : SpeechHistoryItemResponseModel.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("history_item_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `history_item_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("history_item_id").toString()));
      }
      if (!jsonObj.get("request_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `request_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("request_id").toString()));
      }
      if (!jsonObj.get("voice_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `voice_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("voice_id").toString()));
      }
      if (!jsonObj.get("model_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `model_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("model_id").toString()));
      }
      if (!jsonObj.get("voice_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `voice_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("voice_name").toString()));
      }
      if (!jsonObj.get("voice_category").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `voice_category` to be a primitive type in the JSON string but got `%s`", jsonObj.get("voice_category").toString()));
      }
      if (!jsonObj.get("text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text").toString()));
      }
      if (!jsonObj.get("content_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `content_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("content_type").toString()));
      }
      if (!jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the required field `feedback`
      FeedbackResponseModel.validateJsonObject(jsonObj.getAsJsonObject("feedback"));
      if (!jsonObj.get("share_link_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `share_link_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("share_link_id").toString()));
      }
      if (!jsonObj.get("source").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `source` to be a primitive type in the JSON string but got `%s`", jsonObj.get("source").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SpeechHistoryItemResponseModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SpeechHistoryItemResponseModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SpeechHistoryItemResponseModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SpeechHistoryItemResponseModel.class));

       return (TypeAdapter<T>) new TypeAdapter<SpeechHistoryItemResponseModel>() {
           @Override
           public void write(JsonWriter out, SpeechHistoryItemResponseModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public SpeechHistoryItemResponseModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             SpeechHistoryItemResponseModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SpeechHistoryItemResponseModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SpeechHistoryItemResponseModel
  * @throws IOException if the JSON string is invalid with respect to SpeechHistoryItemResponseModel
  */
  public static SpeechHistoryItemResponseModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SpeechHistoryItemResponseModel.class);
  }

 /**
  * Convert an instance of SpeechHistoryItemResponseModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

