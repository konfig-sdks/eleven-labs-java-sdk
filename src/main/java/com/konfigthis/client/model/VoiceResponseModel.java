/*
 * ElevenLabs API Documentation
 * This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://elevenlabs.io. Our API is experimental so all endpoints are subject to change.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.FineTuningResponseModel;
import com.konfigthis.client.model.SampleResponseModel;
import com.konfigthis.client.model.VoiceSettingsResponseModel;
import com.konfigthis.client.model.VoiceSharingResponseModel;
import com.konfigthis.client.model.VoiceVerificationResponseModel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * VoiceResponseModel
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class VoiceResponseModel {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_VOICE_ID = "voice_id";
  @SerializedName(SERIALIZED_NAME_VOICE_ID)
  private String voiceId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SAMPLES = "samples";
  @SerializedName(SERIALIZED_NAME_SAMPLES)
  private List<SampleResponseModel> samples = new ArrayList<>();

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private String category;

  public static final String SERIALIZED_NAME_FINE_TUNING = "fine_tuning";
  @SerializedName(SERIALIZED_NAME_FINE_TUNING)
  private FineTuningResponseModel fineTuning;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  public static final String SERIALIZED_NAME_PREVIEW_URL = "preview_url";
  @SerializedName(SERIALIZED_NAME_PREVIEW_URL)
  private String previewUrl;

  public static final String SERIALIZED_NAME_AVAILABLE_FOR_TIERS = "available_for_tiers";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_FOR_TIERS)
  private List<String> availableForTiers = new ArrayList<>();

  public static final String SERIALIZED_NAME_SETTINGS = "settings";
  @SerializedName(SERIALIZED_NAME_SETTINGS)
  private VoiceSettingsResponseModel settings;

  public static final String SERIALIZED_NAME_SHARING = "sharing";
  @SerializedName(SERIALIZED_NAME_SHARING)
  private VoiceSharingResponseModel sharing;

  public static final String SERIALIZED_NAME_HIGH_QUALITY_BASE_MODEL_IDS = "high_quality_base_model_ids";
  @SerializedName(SERIALIZED_NAME_HIGH_QUALITY_BASE_MODEL_IDS)
  private List<String> highQualityBaseModelIds = new ArrayList<>();

  /**
   * Gets or Sets safetyControl
   */
  @JsonAdapter(SafetyControlEnum.Adapter.class)
 public enum SafetyControlEnum {
    NONE("NONE"),
    
    BAN("BAN"),
    
    CAPTCHA("CAPTCHA"),
    
    CAPTCHA_AND_MODERATION("CAPTCHA_AND_MODERATION");

    private String value;

    SafetyControlEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SafetyControlEnum fromValue(String value) {
      for (SafetyControlEnum b : SafetyControlEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SafetyControlEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SafetyControlEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SafetyControlEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SafetyControlEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SAFETY_CONTROL = "safety_control";
  @SerializedName(SERIALIZED_NAME_SAFETY_CONTROL)
  private SafetyControlEnum safetyControl;

  public static final String SERIALIZED_NAME_VOICE_VERIFICATION = "voice_verification";
  @SerializedName(SERIALIZED_NAME_VOICE_VERIFICATION)
  private VoiceVerificationResponseModel voiceVerification;

  public VoiceResponseModel() {
  }

  public VoiceResponseModel description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public VoiceResponseModel voiceId(String voiceId) {
    
    
    
    
    this.voiceId = voiceId;
    return this;
  }

   /**
   * Get voiceId
   * @return voiceId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getVoiceId() {
    return voiceId;
  }


  public void setVoiceId(String voiceId) {
    
    
    
    this.voiceId = voiceId;
  }


  public VoiceResponseModel name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public VoiceResponseModel samples(List<SampleResponseModel> samples) {
    
    
    
    
    this.samples = samples;
    return this;
  }

  public VoiceResponseModel addSamplesItem(SampleResponseModel samplesItem) {
    this.samples.add(samplesItem);
    return this;
  }

   /**
   * Get samples
   * @return samples
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<SampleResponseModel> getSamples() {
    return samples;
  }


  public void setSamples(List<SampleResponseModel> samples) {
    
    
    
    this.samples = samples;
  }


  public VoiceResponseModel category(String category) {
    
    
    
    
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getCategory() {
    return category;
  }


  public void setCategory(String category) {
    
    
    
    this.category = category;
  }


  public VoiceResponseModel fineTuning(FineTuningResponseModel fineTuning) {
    
    
    
    
    this.fineTuning = fineTuning;
    return this;
  }

   /**
   * Get fineTuning
   * @return fineTuning
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public FineTuningResponseModel getFineTuning() {
    return fineTuning;
  }


  public void setFineTuning(FineTuningResponseModel fineTuning) {
    
    
    
    this.fineTuning = fineTuning;
  }


  public VoiceResponseModel labels(Map<String, String> labels) {
    
    
    
    
    this.labels = labels;
    return this;
  }

  public VoiceResponseModel putLabelsItem(String key, String labelsItem) {
    this.labels.put(key, labelsItem);
    return this;
  }

   /**
   * Get labels
   * @return labels
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Map<String, String> getLabels() {
    return labels;
  }


  public void setLabels(Map<String, String> labels) {
    
    
    
    this.labels = labels;
  }


  public VoiceResponseModel previewUrl(String previewUrl) {
    
    
    
    
    this.previewUrl = previewUrl;
    return this;
  }

   /**
   * Get previewUrl
   * @return previewUrl
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getPreviewUrl() {
    return previewUrl;
  }


  public void setPreviewUrl(String previewUrl) {
    
    
    
    this.previewUrl = previewUrl;
  }


  public VoiceResponseModel availableForTiers(List<String> availableForTiers) {
    
    
    
    
    this.availableForTiers = availableForTiers;
    return this;
  }

  public VoiceResponseModel addAvailableForTiersItem(String availableForTiersItem) {
    this.availableForTiers.add(availableForTiersItem);
    return this;
  }

   /**
   * Get availableForTiers
   * @return availableForTiers
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<String> getAvailableForTiers() {
    return availableForTiers;
  }


  public void setAvailableForTiers(List<String> availableForTiers) {
    
    
    
    this.availableForTiers = availableForTiers;
  }


  public VoiceResponseModel settings(VoiceSettingsResponseModel settings) {
    
    
    
    
    this.settings = settings;
    return this;
  }

   /**
   * Get settings
   * @return settings
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public VoiceSettingsResponseModel getSettings() {
    return settings;
  }


  public void setSettings(VoiceSettingsResponseModel settings) {
    
    
    
    this.settings = settings;
  }


  public VoiceResponseModel sharing(VoiceSharingResponseModel sharing) {
    
    
    
    
    this.sharing = sharing;
    return this;
  }

   /**
   * Get sharing
   * @return sharing
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public VoiceSharingResponseModel getSharing() {
    return sharing;
  }


  public void setSharing(VoiceSharingResponseModel sharing) {
    
    
    
    this.sharing = sharing;
  }


  public VoiceResponseModel highQualityBaseModelIds(List<String> highQualityBaseModelIds) {
    
    
    
    
    this.highQualityBaseModelIds = highQualityBaseModelIds;
    return this;
  }

  public VoiceResponseModel addHighQualityBaseModelIdsItem(String highQualityBaseModelIdsItem) {
    this.highQualityBaseModelIds.add(highQualityBaseModelIdsItem);
    return this;
  }

   /**
   * Get highQualityBaseModelIds
   * @return highQualityBaseModelIds
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<String> getHighQualityBaseModelIds() {
    return highQualityBaseModelIds;
  }


  public void setHighQualityBaseModelIds(List<String> highQualityBaseModelIds) {
    
    
    
    this.highQualityBaseModelIds = highQualityBaseModelIds;
  }


  public VoiceResponseModel safetyControl(SafetyControlEnum safetyControl) {
    
    
    
    
    this.safetyControl = safetyControl;
    return this;
  }

   /**
   * Get safetyControl
   * @return safetyControl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SafetyControlEnum getSafetyControl() {
    return safetyControl;
  }


  public void setSafetyControl(SafetyControlEnum safetyControl) {
    
    
    
    this.safetyControl = safetyControl;
  }


  public VoiceResponseModel voiceVerification(VoiceVerificationResponseModel voiceVerification) {
    
    
    
    
    this.voiceVerification = voiceVerification;
    return this;
  }

   /**
   * Get voiceVerification
   * @return voiceVerification
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public VoiceVerificationResponseModel getVoiceVerification() {
    return voiceVerification;
  }


  public void setVoiceVerification(VoiceVerificationResponseModel voiceVerification) {
    
    
    
    this.voiceVerification = voiceVerification;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the VoiceResponseModel instance itself
   */
  public VoiceResponseModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VoiceResponseModel voiceResponseModel = (VoiceResponseModel) o;
    return Objects.equals(this.description, voiceResponseModel.description) &&
        Objects.equals(this.voiceId, voiceResponseModel.voiceId) &&
        Objects.equals(this.name, voiceResponseModel.name) &&
        Objects.equals(this.samples, voiceResponseModel.samples) &&
        Objects.equals(this.category, voiceResponseModel.category) &&
        Objects.equals(this.fineTuning, voiceResponseModel.fineTuning) &&
        Objects.equals(this.labels, voiceResponseModel.labels) &&
        Objects.equals(this.previewUrl, voiceResponseModel.previewUrl) &&
        Objects.equals(this.availableForTiers, voiceResponseModel.availableForTiers) &&
        Objects.equals(this.settings, voiceResponseModel.settings) &&
        Objects.equals(this.sharing, voiceResponseModel.sharing) &&
        Objects.equals(this.highQualityBaseModelIds, voiceResponseModel.highQualityBaseModelIds) &&
        Objects.equals(this.safetyControl, voiceResponseModel.safetyControl) &&
        Objects.equals(this.voiceVerification, voiceResponseModel.voiceVerification)&&
        Objects.equals(this.additionalProperties, voiceResponseModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, voiceId, name, samples, category, fineTuning, labels, previewUrl, availableForTiers, settings, sharing, highQualityBaseModelIds, safetyControl, voiceVerification, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VoiceResponseModel {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    voiceId: ").append(toIndentedString(voiceId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    samples: ").append(toIndentedString(samples)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    fineTuning: ").append(toIndentedString(fineTuning)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    previewUrl: ").append(toIndentedString(previewUrl)).append("\n");
    sb.append("    availableForTiers: ").append(toIndentedString(availableForTiers)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("    sharing: ").append(toIndentedString(sharing)).append("\n");
    sb.append("    highQualityBaseModelIds: ").append(toIndentedString(highQualityBaseModelIds)).append("\n");
    sb.append("    safetyControl: ").append(toIndentedString(safetyControl)).append("\n");
    sb.append("    voiceVerification: ").append(toIndentedString(voiceVerification)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("voice_id");
    openapiFields.add("name");
    openapiFields.add("samples");
    openapiFields.add("category");
    openapiFields.add("fine_tuning");
    openapiFields.add("labels");
    openapiFields.add("preview_url");
    openapiFields.add("available_for_tiers");
    openapiFields.add("settings");
    openapiFields.add("sharing");
    openapiFields.add("high_quality_base_model_ids");
    openapiFields.add("safety_control");
    openapiFields.add("voice_verification");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("description");
    openapiRequiredFields.add("voice_id");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("samples");
    openapiRequiredFields.add("category");
    openapiRequiredFields.add("fine_tuning");
    openapiRequiredFields.add("labels");
    openapiRequiredFields.add("preview_url");
    openapiRequiredFields.add("available_for_tiers");
    openapiRequiredFields.add("settings");
    openapiRequiredFields.add("sharing");
    openapiRequiredFields.add("high_quality_base_model_ids");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to VoiceResponseModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!VoiceResponseModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VoiceResponseModel is not found in the empty JSON string", VoiceResponseModel.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : VoiceResponseModel.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if (!jsonObj.get("voice_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `voice_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("voice_id").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("samples").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `samples` to be an array in the JSON string but got `%s`", jsonObj.get("samples").toString()));
      }

      JsonArray jsonArraysamples = jsonObj.getAsJsonArray("samples");
      // validate the required field `samples` (array)
      for (int i = 0; i < jsonArraysamples.size(); i++) {
        SampleResponseModel.validateJsonObject(jsonArraysamples.get(i).getAsJsonObject());
      };
      if (!jsonObj.get("category").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `category` to be a primitive type in the JSON string but got `%s`", jsonObj.get("category").toString()));
      }
      // validate the required field `fine_tuning`
      FineTuningResponseModel.validateJsonObject(jsonObj.getAsJsonObject("fine_tuning"));
      if (!jsonObj.get("preview_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preview_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preview_url").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("available_for_tiers") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("available_for_tiers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `available_for_tiers` to be an array in the JSON string but got `%s`", jsonObj.get("available_for_tiers").toString()));
      }
      // validate the required field `settings`
      VoiceSettingsResponseModel.validateJsonObject(jsonObj.getAsJsonObject("settings"));
      // validate the required field `sharing`
      VoiceSharingResponseModel.validateJsonObject(jsonObj.getAsJsonObject("sharing"));
      // ensure the required json array is present
      if (jsonObj.get("high_quality_base_model_ids") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("high_quality_base_model_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `high_quality_base_model_ids` to be an array in the JSON string but got `%s`", jsonObj.get("high_quality_base_model_ids").toString()));
      }
      if ((jsonObj.get("safety_control") != null && !jsonObj.get("safety_control").isJsonNull()) && !jsonObj.get("safety_control").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `safety_control` to be a primitive type in the JSON string but got `%s`", jsonObj.get("safety_control").toString()));
      }
      // validate the optional field `voice_verification`
      if (jsonObj.get("voice_verification") != null && !jsonObj.get("voice_verification").isJsonNull()) {
        VoiceVerificationResponseModel.validateJsonObject(jsonObj.getAsJsonObject("voice_verification"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VoiceResponseModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VoiceResponseModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VoiceResponseModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VoiceResponseModel.class));

       return (TypeAdapter<T>) new TypeAdapter<VoiceResponseModel>() {
           @Override
           public void write(JsonWriter out, VoiceResponseModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public VoiceResponseModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             VoiceResponseModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of VoiceResponseModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of VoiceResponseModel
  * @throws IOException if the JSON string is invalid with respect to VoiceResponseModel
  */
  public static VoiceResponseModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VoiceResponseModel.class);
  }

 /**
  * Convert an instance of VoiceResponseModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

