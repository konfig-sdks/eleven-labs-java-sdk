/*
 * ElevenLabs API Documentation
 * This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://elevenlabs.io. Our API is experimental so all endpoints are subject to change.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * BodyAddProjectV1ProjectsAddPost
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class BodyAddProjectV1ProjectsAddPost {
  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_FROM_URL = "from_url";
  @SerializedName(SERIALIZED_NAME_FROM_URL)
  private String fromUrl;

  public static final String SERIALIZED_NAME_FROM_DOCUMENT = "from_document";
  @SerializedName(SERIALIZED_NAME_FROM_DOCUMENT)
  private File fromDocument;

  public static final String SERIALIZED_NAME_DEFAULT_TITLE_VOICE_ID = "default_title_voice_id";
  @SerializedName(SERIALIZED_NAME_DEFAULT_TITLE_VOICE_ID)
  private String defaultTitleVoiceId;

  public static final String SERIALIZED_NAME_DEFAULT_PARAGRAPH_VOICE_ID = "default_paragraph_voice_id";
  @SerializedName(SERIALIZED_NAME_DEFAULT_PARAGRAPH_VOICE_ID)
  private String defaultParagraphVoiceId;

  public static final String SERIALIZED_NAME_DEFAULT_MODEL_ID = "default_model_id";
  @SerializedName(SERIALIZED_NAME_DEFAULT_MODEL_ID)
  private String defaultModelId;

  public static final String SERIALIZED_NAME_QUALITY_PRESET = "quality_preset";
  @SerializedName(SERIALIZED_NAME_QUALITY_PRESET)
  private String qualityPreset = "standard";

  public static final String SERIALIZED_NAME_AUTHOR = "author";
  @SerializedName(SERIALIZED_NAME_AUTHOR)
  private String author;

  public static final String SERIALIZED_NAME_ISBN_NUMBER = "isbn_number";
  @SerializedName(SERIALIZED_NAME_ISBN_NUMBER)
  private String isbnNumber;

  public static final String SERIALIZED_NAME_ACX_VOLUME_NORMALIZATION = "acx_volume_normalization";
  @SerializedName(SERIALIZED_NAME_ACX_VOLUME_NORMALIZATION)
  private Boolean acxVolumeNormalization = false;

  public static final String SERIALIZED_NAME_VOLUME_NORMALIZATION = "volume_normalization";
  @SerializedName(SERIALIZED_NAME_VOLUME_NORMALIZATION)
  private Boolean volumeNormalization = false;

  public static final String SERIALIZED_NAME_PRONUNCIATION_DICTIONARY_LOCATORS = "pronunciation_dictionary_locators";
  @SerializedName(SERIALIZED_NAME_PRONUNCIATION_DICTIONARY_LOCATORS)
  private List<String> pronunciationDictionaryLocators = new ArrayList<>();

  public static final String SERIALIZED_NAME_CALLBACK_URL = "callback_url";
  @SerializedName(SERIALIZED_NAME_CALLBACK_URL)
  private String callbackUrl;

  public BodyAddProjectV1ProjectsAddPost() {
  }

  public BodyAddProjectV1ProjectsAddPost title(String title) {
    
    
    
    
    this.title = title;
    return this;
  }

   /**
   * An optional name of the author of the project, this will be added as metadata to the mp3 file on project / chapter download.
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An optional name of the author of the project, this will be added as metadata to the mp3 file on project / chapter download.")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    
    
    
    this.title = title;
  }


  public BodyAddProjectV1ProjectsAddPost name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * The name of the project, used for identification only.
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The name of the project, used for identification only.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public BodyAddProjectV1ProjectsAddPost fromUrl(String fromUrl) {
    
    
    
    
    this.fromUrl = fromUrl;
    return this;
  }

   /**
   * An optional URL from which we will extract content to initialize the project. If this is set, &#39;from_url&#39; must be null. If neither &#39;from_url&#39; or &#39;from_document&#39; are provided we will initialize the project as blank.
   * @return fromUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An optional URL from which we will extract content to initialize the project. If this is set, 'from_url' must be null. If neither 'from_url' or 'from_document' are provided we will initialize the project as blank.")

  public String getFromUrl() {
    return fromUrl;
  }


  public void setFromUrl(String fromUrl) {
    
    
    
    this.fromUrl = fromUrl;
  }


  public BodyAddProjectV1ProjectsAddPost fromDocument(File fromDocument) {
    
    
    
    
    this.fromDocument = fromDocument;
    return this;
  }

   /**
   * An optional .epub, .pdf, .txt or similar file can be provided. If provided, we will initialize the project with its content. If this is set, &#39;from_url&#39; must be null.  If neither &#39;from_url&#39; or &#39;from_document&#39; are provided we will initialize the project as blank.
   * @return fromDocument
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An optional .epub, .pdf, .txt or similar file can be provided. If provided, we will initialize the project with its content. If this is set, 'from_url' must be null.  If neither 'from_url' or 'from_document' are provided we will initialize the project as blank.")

  public File getFromDocument() {
    return fromDocument;
  }


  public void setFromDocument(File fromDocument) {
    
    
    
    this.fromDocument = fromDocument;
  }


  public BodyAddProjectV1ProjectsAddPost defaultTitleVoiceId(String defaultTitleVoiceId) {
    
    
    
    
    this.defaultTitleVoiceId = defaultTitleVoiceId;
    return this;
  }

   /**
   * The voice_id that corresponds to the default voice used for new titles.
   * @return defaultTitleVoiceId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The voice_id that corresponds to the default voice used for new titles.")

  public String getDefaultTitleVoiceId() {
    return defaultTitleVoiceId;
  }


  public void setDefaultTitleVoiceId(String defaultTitleVoiceId) {
    
    
    
    this.defaultTitleVoiceId = defaultTitleVoiceId;
  }


  public BodyAddProjectV1ProjectsAddPost defaultParagraphVoiceId(String defaultParagraphVoiceId) {
    
    
    
    
    this.defaultParagraphVoiceId = defaultParagraphVoiceId;
    return this;
  }

   /**
   * The voice_id that corresponds to the default voice used for new paragraphs.
   * @return defaultParagraphVoiceId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The voice_id that corresponds to the default voice used for new paragraphs.")

  public String getDefaultParagraphVoiceId() {
    return defaultParagraphVoiceId;
  }


  public void setDefaultParagraphVoiceId(String defaultParagraphVoiceId) {
    
    
    
    this.defaultParagraphVoiceId = defaultParagraphVoiceId;
  }


  public BodyAddProjectV1ProjectsAddPost defaultModelId(String defaultModelId) {
    
    
    
    
    this.defaultModelId = defaultModelId;
    return this;
  }

   /**
   * The model_id of the model to be used for this project, you can query GET https://api.elevenlabs.io/v1/models to list all available models.
   * @return defaultModelId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The model_id of the model to be used for this project, you can query GET https://api.elevenlabs.io/v1/models to list all available models.")

  public String getDefaultModelId() {
    return defaultModelId;
  }


  public void setDefaultModelId(String defaultModelId) {
    
    
    
    this.defaultModelId = defaultModelId;
  }


  public BodyAddProjectV1ProjectsAddPost qualityPreset(String qualityPreset) {
    
    
    
    
    this.qualityPreset = qualityPreset;
    return this;
  }

   /**
   * Output quality of the generated audio. Must be one of: standard - standard output format, 128kbps with 44.1kHz sample rate. high - high quality output format, 192kbps with 44.1kHz sample rate and major improvements on our side. Using this setting increases the character cost by 20%. ultra - ultra quality output format, 192kbps with 44.1kHz sample rate and highest improvements on our side. Using this setting increases the character cost by 50%. 
   * @return qualityPreset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "standard", value = "Output quality of the generated audio. Must be one of: standard - standard output format, 128kbps with 44.1kHz sample rate. high - high quality output format, 192kbps with 44.1kHz sample rate and major improvements on our side. Using this setting increases the character cost by 20%. ultra - ultra quality output format, 192kbps with 44.1kHz sample rate and highest improvements on our side. Using this setting increases the character cost by 50%. ")

  public String getQualityPreset() {
    return qualityPreset;
  }


  public void setQualityPreset(String qualityPreset) {
    
    
    
    this.qualityPreset = qualityPreset;
  }


  public BodyAddProjectV1ProjectsAddPost author(String author) {
    
    
    
    
    this.author = author;
    return this;
  }

   /**
   * An optional name of the author of the project, this will be added as metadata to the mp3 file on project / chapter download.
   * @return author
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An optional name of the author of the project, this will be added as metadata to the mp3 file on project / chapter download.")

  public String getAuthor() {
    return author;
  }


  public void setAuthor(String author) {
    
    
    
    this.author = author;
  }


  public BodyAddProjectV1ProjectsAddPost isbnNumber(String isbnNumber) {
    
    
    
    
    this.isbnNumber = isbnNumber;
    return this;
  }

   /**
   * An optional ISBN number of the project you want to create, this will be added as metadata to the mp3 file on project / chapter download.
   * @return isbnNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An optional ISBN number of the project you want to create, this will be added as metadata to the mp3 file on project / chapter download.")

  public String getIsbnNumber() {
    return isbnNumber;
  }


  public void setIsbnNumber(String isbnNumber) {
    
    
    
    this.isbnNumber = isbnNumber;
  }


  public BodyAddProjectV1ProjectsAddPost acxVolumeNormalization(Boolean acxVolumeNormalization) {
    
    
    
    
    this.acxVolumeNormalization = acxVolumeNormalization;
    return this;
  }

   /**
   * [Deprecated] When the project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements
   * @return acxVolumeNormalization
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "[Deprecated] When the project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements")

  public Boolean getAcxVolumeNormalization() {
    return acxVolumeNormalization;
  }


  public void setAcxVolumeNormalization(Boolean acxVolumeNormalization) {
    
    
    
    this.acxVolumeNormalization = acxVolumeNormalization;
  }


  public BodyAddProjectV1ProjectsAddPost volumeNormalization(Boolean volumeNormalization) {
    
    
    
    
    this.volumeNormalization = volumeNormalization;
    return this;
  }

   /**
   * When the project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements
   * @return volumeNormalization
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "When the project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements")

  public Boolean getVolumeNormalization() {
    return volumeNormalization;
  }


  public void setVolumeNormalization(Boolean volumeNormalization) {
    
    
    
    this.volumeNormalization = volumeNormalization;
  }


  public BodyAddProjectV1ProjectsAddPost pronunciationDictionaryLocators(List<String> pronunciationDictionaryLocators) {
    
    
    
    
    this.pronunciationDictionaryLocators = pronunciationDictionaryLocators;
    return this;
  }

  public BodyAddProjectV1ProjectsAddPost addPronunciationDictionaryLocatorsItem(String pronunciationDictionaryLocatorsItem) {
    this.pronunciationDictionaryLocators.add(pronunciationDictionaryLocatorsItem);
    return this;
  }

   /**
   * A list of pronunciation dictionary locators (id, version_id) encoded as a list of JSON strings for pronunciation dictionaries to be applied to the text.  A list of json encoded strings is required as adding projects may occur through formData as opposed to jsonBody
   * @return pronunciationDictionaryLocators
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A list of pronunciation dictionary locators (id, version_id) encoded as a list of JSON strings for pronunciation dictionaries to be applied to the text.  A list of json encoded strings is required as adding projects may occur through formData as opposed to jsonBody")

  public List<String> getPronunciationDictionaryLocators() {
    return pronunciationDictionaryLocators;
  }


  public void setPronunciationDictionaryLocators(List<String> pronunciationDictionaryLocators) {
    
    
    
    this.pronunciationDictionaryLocators = pronunciationDictionaryLocators;
  }


  public BodyAddProjectV1ProjectsAddPost callbackUrl(String callbackUrl) {
    
    
    
    
    this.callbackUrl = callbackUrl;
    return this;
  }

   /**
   * A url that will be called by our service when the project is converted with a json containing the status of the conversion
   * @return callbackUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A url that will be called by our service when the project is converted with a json containing the status of the conversion")

  public String getCallbackUrl() {
    return callbackUrl;
  }


  public void setCallbackUrl(String callbackUrl) {
    
    
    
    this.callbackUrl = callbackUrl;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the BodyAddProjectV1ProjectsAddPost instance itself
   */
  public BodyAddProjectV1ProjectsAddPost putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BodyAddProjectV1ProjectsAddPost bodyAddProjectV1ProjectsAddPost = (BodyAddProjectV1ProjectsAddPost) o;
    return Objects.equals(this.title, bodyAddProjectV1ProjectsAddPost.title) &&
        Objects.equals(this.name, bodyAddProjectV1ProjectsAddPost.name) &&
        Objects.equals(this.fromUrl, bodyAddProjectV1ProjectsAddPost.fromUrl) &&
        Objects.equals(this.fromDocument, bodyAddProjectV1ProjectsAddPost.fromDocument) &&
        Objects.equals(this.defaultTitleVoiceId, bodyAddProjectV1ProjectsAddPost.defaultTitleVoiceId) &&
        Objects.equals(this.defaultParagraphVoiceId, bodyAddProjectV1ProjectsAddPost.defaultParagraphVoiceId) &&
        Objects.equals(this.defaultModelId, bodyAddProjectV1ProjectsAddPost.defaultModelId) &&
        Objects.equals(this.qualityPreset, bodyAddProjectV1ProjectsAddPost.qualityPreset) &&
        Objects.equals(this.author, bodyAddProjectV1ProjectsAddPost.author) &&
        Objects.equals(this.isbnNumber, bodyAddProjectV1ProjectsAddPost.isbnNumber) &&
        Objects.equals(this.acxVolumeNormalization, bodyAddProjectV1ProjectsAddPost.acxVolumeNormalization) &&
        Objects.equals(this.volumeNormalization, bodyAddProjectV1ProjectsAddPost.volumeNormalization) &&
        Objects.equals(this.pronunciationDictionaryLocators, bodyAddProjectV1ProjectsAddPost.pronunciationDictionaryLocators) &&
        Objects.equals(this.callbackUrl, bodyAddProjectV1ProjectsAddPost.callbackUrl)&&
        Objects.equals(this.additionalProperties, bodyAddProjectV1ProjectsAddPost.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, name, fromUrl, fromDocument, defaultTitleVoiceId, defaultParagraphVoiceId, defaultModelId, qualityPreset, author, isbnNumber, acxVolumeNormalization, volumeNormalization, pronunciationDictionaryLocators, callbackUrl, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BodyAddProjectV1ProjectsAddPost {\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    fromUrl: ").append(toIndentedString(fromUrl)).append("\n");
    sb.append("    fromDocument: ").append(toIndentedString(fromDocument)).append("\n");
    sb.append("    defaultTitleVoiceId: ").append(toIndentedString(defaultTitleVoiceId)).append("\n");
    sb.append("    defaultParagraphVoiceId: ").append(toIndentedString(defaultParagraphVoiceId)).append("\n");
    sb.append("    defaultModelId: ").append(toIndentedString(defaultModelId)).append("\n");
    sb.append("    qualityPreset: ").append(toIndentedString(qualityPreset)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    isbnNumber: ").append(toIndentedString(isbnNumber)).append("\n");
    sb.append("    acxVolumeNormalization: ").append(toIndentedString(acxVolumeNormalization)).append("\n");
    sb.append("    volumeNormalization: ").append(toIndentedString(volumeNormalization)).append("\n");
    sb.append("    pronunciationDictionaryLocators: ").append(toIndentedString(pronunciationDictionaryLocators)).append("\n");
    sb.append("    callbackUrl: ").append(toIndentedString(callbackUrl)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("title");
    openapiFields.add("name");
    openapiFields.add("from_url");
    openapiFields.add("from_document");
    openapiFields.add("default_title_voice_id");
    openapiFields.add("default_paragraph_voice_id");
    openapiFields.add("default_model_id");
    openapiFields.add("quality_preset");
    openapiFields.add("author");
    openapiFields.add("isbn_number");
    openapiFields.add("acx_volume_normalization");
    openapiFields.add("volume_normalization");
    openapiFields.add("pronunciation_dictionary_locators");
    openapiFields.add("callback_url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("default_title_voice_id");
    openapiRequiredFields.add("default_paragraph_voice_id");
    openapiRequiredFields.add("default_model_id");
    openapiRequiredFields.add("pronunciation_dictionary_locators");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to BodyAddProjectV1ProjectsAddPost
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!BodyAddProjectV1ProjectsAddPost.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BodyAddProjectV1ProjectsAddPost is not found in the empty JSON string", BodyAddProjectV1ProjectsAddPost.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : BodyAddProjectV1ProjectsAddPost.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("from_url") != null && !jsonObj.get("from_url").isJsonNull()) && !jsonObj.get("from_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `from_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("from_url").toString()));
      }
      if (!jsonObj.get("default_title_voice_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `default_title_voice_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("default_title_voice_id").toString()));
      }
      if (!jsonObj.get("default_paragraph_voice_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `default_paragraph_voice_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("default_paragraph_voice_id").toString()));
      }
      if (!jsonObj.get("default_model_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `default_model_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("default_model_id").toString()));
      }
      if ((jsonObj.get("quality_preset") != null && !jsonObj.get("quality_preset").isJsonNull()) && !jsonObj.get("quality_preset").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `quality_preset` to be a primitive type in the JSON string but got `%s`", jsonObj.get("quality_preset").toString()));
      }
      if ((jsonObj.get("author") != null && !jsonObj.get("author").isJsonNull()) && !jsonObj.get("author").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `author` to be a primitive type in the JSON string but got `%s`", jsonObj.get("author").toString()));
      }
      if ((jsonObj.get("isbn_number") != null && !jsonObj.get("isbn_number").isJsonNull()) && !jsonObj.get("isbn_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `isbn_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("isbn_number").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("pronunciation_dictionary_locators") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("pronunciation_dictionary_locators").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `pronunciation_dictionary_locators` to be an array in the JSON string but got `%s`", jsonObj.get("pronunciation_dictionary_locators").toString()));
      }
      if ((jsonObj.get("callback_url") != null && !jsonObj.get("callback_url").isJsonNull()) && !jsonObj.get("callback_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `callback_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("callback_url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BodyAddProjectV1ProjectsAddPost.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BodyAddProjectV1ProjectsAddPost' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BodyAddProjectV1ProjectsAddPost> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BodyAddProjectV1ProjectsAddPost.class));

       return (TypeAdapter<T>) new TypeAdapter<BodyAddProjectV1ProjectsAddPost>() {
           @Override
           public void write(JsonWriter out, BodyAddProjectV1ProjectsAddPost value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public BodyAddProjectV1ProjectsAddPost read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             BodyAddProjectV1ProjectsAddPost instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of BodyAddProjectV1ProjectsAddPost given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of BodyAddProjectV1ProjectsAddPost
  * @throws IOException if the JSON string is invalid with respect to BodyAddProjectV1ProjectsAddPost
  */
  public static BodyAddProjectV1ProjectsAddPost fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BodyAddProjectV1ProjectsAddPost.class);
  }

 /**
  * Convert an instance of BodyAddProjectV1ProjectsAddPost to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

