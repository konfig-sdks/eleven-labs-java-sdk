/*
 * ElevenLabs API Documentation
 * This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://elevenlabs.io. Our API is experimental so all endpoints are subject to change.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost {
  /**
   * Category code corresponding to the gender of the generated voice. Possible values: female, male.
   */
  @JsonAdapter(GenderEnum.Adapter.class)
 public enum GenderEnum {
    FEMALE("female"),
    
    MALE("male");

    private String value;

    GenderEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static GenderEnum fromValue(String value) {
      for (GenderEnum b : GenderEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<GenderEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final GenderEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public GenderEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return GenderEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private GenderEnum gender;

  public static final String SERIALIZED_NAME_ACCENT = "accent";
  @SerializedName(SERIALIZED_NAME_ACCENT)
  private String accent;

  /**
   * Category code corresponding to the age of the generated voice. Possible values: young, middle_aged, old.
   */
  @JsonAdapter(AgeEnum.Adapter.class)
 public enum AgeEnum {
    YOUNG("young"),
    
    MIDDLE_AGED("middle_aged"),
    
    OLD("old");

    private String value;

    AgeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AgeEnum fromValue(String value) {
      for (AgeEnum b : AgeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AgeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AgeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AgeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AgeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_AGE = "age";
  @SerializedName(SERIALIZED_NAME_AGE)
  private AgeEnum age;

  public static final String SERIALIZED_NAME_ACCENT_STRENGTH = "accent_strength";
  @SerializedName(SERIALIZED_NAME_ACCENT_STRENGTH)
  private Double accentStrength;

  public static final String SERIALIZED_NAME_TEXT = "text";
  @SerializedName(SERIALIZED_NAME_TEXT)
  private String text;

  public BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost() {
  }

  public BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost gender(GenderEnum gender) {
    
    
    
    
    this.gender = gender;
    return this;
  }

   /**
   * Category code corresponding to the gender of the generated voice. Possible values: female, male.
   * @return gender
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Category code corresponding to the gender of the generated voice. Possible values: female, male.")

  public GenderEnum getGender() {
    return gender;
  }


  public void setGender(GenderEnum gender) {
    
    
    
    this.gender = gender;
  }


  public BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost accent(String accent) {
    
    
    
    
    this.accent = accent;
    return this;
  }

   /**
   * Category code corresponding to the accent of the generated voice. Possible values: american, british, african, australian, indian.
   * @return accent
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Category code corresponding to the accent of the generated voice. Possible values: american, british, african, australian, indian.")

  public String getAccent() {
    return accent;
  }


  public void setAccent(String accent) {
    
    
    
    this.accent = accent;
  }


  public BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost age(AgeEnum age) {
    
    
    
    
    this.age = age;
    return this;
  }

   /**
   * Category code corresponding to the age of the generated voice. Possible values: young, middle_aged, old.
   * @return age
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Category code corresponding to the age of the generated voice. Possible values: young, middle_aged, old.")

  public AgeEnum getAge() {
    return age;
  }


  public void setAge(AgeEnum age) {
    
    
    
    this.age = age;
  }


  public BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost accentStrength(Double accentStrength) {
    
    
    
    
    this.accentStrength = accentStrength;
    return this;
  }

  public BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost accentStrength(Integer accentStrength) {
    
    
    
    
    this.accentStrength = accentStrength.doubleValue();
    return this;
  }

   /**
   * The strength of the accent of the generated voice. Has to be between 0.3 and 2.0.
   * @return accentStrength
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The strength of the accent of the generated voice. Has to be between 0.3 and 2.0.")

  public Double getAccentStrength() {
    return accentStrength;
  }


  public void setAccentStrength(Double accentStrength) {
    
    
    
    this.accentStrength = accentStrength;
  }


  public BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost text(String text) {
    
    
    
    
    this.text = text;
    return this;
  }

   /**
   * Text to generate, text length has to be between 100 and 1000.
   * @return text
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Text to generate, text length has to be between 100 and 1000.")

  public String getText() {
    return text;
  }


  public void setText(String text) {
    
    
    
    this.text = text;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost instance itself
   */
  public BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost bodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost = (BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost) o;
    return Objects.equals(this.gender, bodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost.gender) &&
        Objects.equals(this.accent, bodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost.accent) &&
        Objects.equals(this.age, bodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost.age) &&
        Objects.equals(this.accentStrength, bodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost.accentStrength) &&
        Objects.equals(this.text, bodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost.text)&&
        Objects.equals(this.additionalProperties, bodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gender, accent, age, accentStrength, text, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost {\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    accent: ").append(toIndentedString(accent)).append("\n");
    sb.append("    age: ").append(toIndentedString(age)).append("\n");
    sb.append("    accentStrength: ").append(toIndentedString(accentStrength)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("gender");
    openapiFields.add("accent");
    openapiFields.add("age");
    openapiFields.add("accent_strength");
    openapiFields.add("text");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("gender");
    openapiRequiredFields.add("accent");
    openapiRequiredFields.add("age");
    openapiRequiredFields.add("accent_strength");
    openapiRequiredFields.add("text");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost is not found in the empty JSON string", BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gender").toString()));
      }
      if (!jsonObj.get("accent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accent").toString()));
      }
      if (!jsonObj.get("age").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `age` to be a primitive type in the JSON string but got `%s`", jsonObj.get("age").toString()));
      }
      if (!jsonObj.get("text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost.class));

       return (TypeAdapter<T>) new TypeAdapter<BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost>() {
           @Override
           public void write(JsonWriter out, BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost
  * @throws IOException if the JSON string is invalid with respect to BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost
  */
  public static BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost.class);
  }

 /**
  * Convert an instance of BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

